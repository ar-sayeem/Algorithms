/// Quick Sort in C

#include <stdio.h>

void swap(int *a, int *b)
{
    int temp = *a;
    *a = *b;
    *b = temp;
}

int Partition(int A[], int low, int high)
{
    int pivot = A[low];
    int i = low;
    int j = high;

    while (i < j)
    {
        while (A[i] <= pivot)
        {
            i++;
        }

        while (A[j] > pivot)
        {
            j--;
        }

        if (i < j)
        {
            swap(&A[i], &A[j]);
        }
    }

    swap(&A[low], &A[j]);
    return j;
}

void quickSort(int A[], int low, int high)
{
    if (low < high)
    {
        int pivot = Partition(A, low, high);

        quickSort(A, low, pivot - 1);
        quickSort(A, pivot + 1, high);
    }
}

int main()
{
    int n;

    printf("How many elements?\n");
    scanf("%d", &n);

    int A[n];

    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &A[i]);
    }

    printf("\nGiven Array : ");
    for (int i = 0; i < n; i++)
    {
        printf("%d ", A[i]);
    }
    printf("\n");

    quickSort(A, 0, n - 1);

    printf("Sorted Array: ");
    for (int i = 0; i < n; i++)
    {
        printf("%d ", A[i]);
    }
    printf("\n");

    return 0;
}


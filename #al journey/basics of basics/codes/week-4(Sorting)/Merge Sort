/// Merge Sort Using Array in C

#include<stdio.h>
#include<stdlib.h>

void merge(int arr[], int l, int m, int h)
{
    int i, j, k;
    int n1 = m - l + 1;
    int n2 = h - m;

    int L[n1], R[n2];

    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1 + j];

    i = 0;
    j = 0;
    k = l;
    while (i < n1 && j < n2)
    {
        if (L[i] <= R[j])
        {
            arr[k] = L[i];
            i++;
        }
        else
        {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    while (i < n1)
    {
        arr[k] = L[i];
        i++;
        k++;
    }

    while (j < n2)
    {
        arr[k] = R[j];
        j++;
        k++;
    }
}

void mergeSort(int arr[], int l, int h)
{
    if (l < h)
    {
        //int m = l + (h - l) / 2; l->L
        int m = (l+h)/2;


        mergeSort(arr, l, m);
        mergeSort(arr, m + 1, h);

        merge(arr, l, m, h);
    }
}

void display(int A[], int size)
{
    int i;
    for(i=0 ; i<size ; i++)
    {
        printf("%d ",A[i]);
    }
    printf("\n");

}

int main()
{
    int arr[] = {12,23,54,6,9,7,8,10,46};
    int arr_size = sizeof(arr) / sizeof(arr[0]);

    printf("Given Array : \n");
    display(arr,arr_size);

    mergeSort(arr, 0, arr_size - 1);
    printf("Sorted Array : \n");
    display(arr,arr_size);

    return 0;
}

//---------------------------------------------------------------------------------------------

/*
/// With User Input

#include<stdio.h>
#include<stdlib.h>

int n, a[100], b[100];

void merge2(int L, int MID, int H)
{
    int i=L, k=L, j=MID+1;
    while(i<=MID && j<=H)
    {
        if(a[i]<a[j])
        {
            b[k] = a[i];
            i++;
            k++;
        }
        else
        {
            b[k] = a[j];
            j++;
            k++;
        }
    }
    while(i<=MID)
    {
        b[k] = a[i];
        i++;
        k++;
    }
    while(j<=H)
    {
        b[k] = a[j];
        j++;
        k++;
    }
    for(int i=1; i<=H; i++)
    {
        a[i] = b[i];
    }
}

void merge(int L, int H)
{
    if(L<H)
    {
        int MID = (L+H)/2;
        merge(L,MID);
        merge(MID+1,H);
        merge2(L,MID,H);
    }
    else
    {
        return;
    }
}

int main()
{
    int n;
    printf("How many Elements!\n");
    scanf("%d", &n);
    int i;
    printf("ELEMENTS:\n");
    for(i=1; i<=n; i++)
    {
        scanf("%d",&a[i]);
    }
    printf("Given Array:\n");
    for(i=1; i<=n; i++)
    {
        printf("%d ",a[i]);
    }
    printf("\n");

    merge(0,n);
    printf("After Merge Sort Elements:\n");
    for(i=1; i<=n; i++)
    {
        printf("%d ", a[i]);
    }
        printf("\n");

    return 0;
}
*/

//---------------------------------------------------------------------------------------------

/*
#include <stdio.h>

void marge(int a[], int l, int mid, int h);
void margsort(int a[], int l, int h);
void dis(int n, int a[], int b[]);

int main()
{
    int n, i;
    printf("Enter the size of array:");
    scanf("%d", &n);
    int a[n], b[n];

    printf("Enter the elements of the array:\n");
    for (i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
    }

    int l = 0, h = n - 1;
    margsort(a, l, h);
    dis(n, a, b);

    return 0;
}

void marge(int a[], int l, int mid, int h)
{
    int i = l, j = mid + 1, k = l, b[h+1];

    while (i <= mid && j <= h)
    {
        if (a[i] <= a[j])
        {
            b[k] = a[i];
            i++;
        }
        else
        {
            b[k] = a[j];
            j++;
        }
        k++;
    }

    while (i <= mid)
    {
        b[k] = a[i];
        i++;
        k++;
    }

    while (j <= h)
    {
        b[k] = a[j];
        j++;
        k++;
    }

    for (i = l; i <= h; i++)
    {
        a[i] = b[i];
    }
}

void margsort(int a[], int l, int h)
{
    if (l < h)
    {
        int mid = (l + h) / 2;
        margsort(a, l, mid);
        margsort(a, mid + 1, h);
        marge(a, l, mid, h);
    }
}

void dis(int n, int a[], int b[])
{
    printf("\nSorted array:");
    for (int i = 0; i < n; i++)
    {
        printf("%d ", a[i]);
    }
}
*/
